env:
  global:
    - TWINE_USERNAME=dhidas

python: 3.6

matrix:
  include:
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64

install:
  - pip install -U twine
  - docker pull $DOCKER_IMAGE

script:
  - docker run --rm -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.ci/build-wheels.sh
  - ls wheelhouse/
  - twine upload -r pypi wheelhouse/*.whl
#  - python -m pip install twine
#  - python -m twine upload wheelhouse/*.whl


#deploy:
#  provider: pypi
#  user: dhidas
#  repository: oscars
#  distributions: "bdist_wheel"
#  package_glob: "wheelhouse/*.whl"
#  password:
#    secure: hxpJOcrofoLFNuZNzP8i+9QlqC0kb4GBFxjZgxuceNu5Ovz6PYFGLAWhuSrIhFqsPIph/Czmnac3y6b13wicnDm3tmbVa6qvVbzu1/rA7Qs11ZUOeqigckoWTdxHqRM5l11isseZtMg/pPSia54M5xJh/nLrg2bkWJSQn/mlvETZSQmIYr8rb5hcPHDkMC4OW2oY+1jePFR8qFaMYD2BDQtR9Kiqm7+EYucmDqJXMRT3n29UffUPqFxZ0iGyxO29S+gOs+ju0nh6QFUphvVHwNPtEmeSF/qwvYbBfWL+KR3QhRyab1wjrTo/qOHve0aW3YkfQLRzaieGHReWG3SN8UZyce5GK+B94Yp4T8yxsfJqIUMs7WmboloUx5J6jWG10Fg7QPTU+m3ifshwSWR59qwrfTUnlYxD5pYXw9vNwtb0BENPdOhNuxKIQCSoZKJ8jaJyZtCS/QMOk0QCqiGUYtmHQdjvtvaPvlSGjEjXSyGI4NYC6mVsifHAlSP1cJnOznzAvaYjacC8DnzqRtbPeDaWdfpPV+7MKB0JYmbLkPYCneqRMh9FYul8cLvdS4yOvWJ8TlnNb9E+hbh2lN4xSnAKXB7AvhYI85jb6A7zFYkJokBN85qkMvfDlSScHYqP3vdynGCIfvv1twvaq35eCG+o0+qfikCZnU5ru6W06xA=

#language: generic
#language: python
#python:
#  # We don't actually use the Travis Python, but this keeps it organized.
#  - "2.7"
#  - "3.3"
#  - "3.4"
#  - "3.5"
#  - "3.6"

#os:
#  - linux
#  - osx

compiler:
#  - gcc
#  - clang

# Perform the manual steps on osx to install python3 and activate venv
#before_install:
#    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
#    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install python3; fi
#    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then virtualenv venv -p python3; fi
#    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then source venv/bin/activate; fi


install:
#  - sudo apt-get update
#
#  # Deal with python versions and osx vs linux
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
#      export MYSYS="MacOSX";
#    else
#      export MYSYS="Linux";
#    fi
#  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
#      wget https://repo.continuum.io/miniconda/Miniconda2-latest-$MYSYS-x86_64.sh -O miniconda.sh;
#    else
#      wget https://repo.continuum.io/miniconda/Miniconda3-latest-$MYSYS-x86_64.sh -O miniconda.sh;
#    fi
#
#  # Get what we need from conda
#  - bash miniconda.sh -b -p $HOME/miniconda
#  - export PATH="$HOME/miniconda/bin:$PATH"
#  - hash -r
#  - conda config --set always_yes yes --set changeps1 no
#  - conda update -q conda
#  - conda info -a
#  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
#  - source activate test-environment
#
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
#      export MYSYS="MacOSX";
#    else
#      export MYSYS="Linux";
#    fi
#
#
#  - python setup.py install

#script:
#  - python test/test.py
